/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SwrImport } from './routes/swr'
import { Route as ReactQueryImport } from './routes/react-query'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SwrRoute = SwrImport.update({
  id: '/swr',
  path: '/swr',
  getParentRoute: () => rootRoute,
} as any)

const ReactQueryRoute = ReactQueryImport.update({
  id: '/react-query',
  path: '/react-query',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/react-query': {
      id: '/react-query'
      path: '/react-query'
      fullPath: '/react-query'
      preLoaderRoute: typeof ReactQueryImport
      parentRoute: typeof rootRoute
    }
    '/swr': {
      id: '/swr'
      path: '/swr'
      fullPath: '/swr'
      preLoaderRoute: typeof SwrImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/react-query': typeof ReactQueryRoute
  '/swr': typeof SwrRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/react-query': typeof ReactQueryRoute
  '/swr': typeof SwrRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/react-query': typeof ReactQueryRoute
  '/swr': typeof SwrRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/react-query' | '/swr'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/react-query' | '/swr'
  id: '__root__' | '/' | '/react-query' | '/swr'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReactQueryRoute: typeof ReactQueryRoute
  SwrRoute: typeof SwrRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReactQueryRoute: ReactQueryRoute,
  SwrRoute: SwrRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/react-query",
        "/swr"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/react-query": {
      "filePath": "react-query.tsx"
    },
    "/swr": {
      "filePath": "swr.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
